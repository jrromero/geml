<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Template Method">
		<instance>
			<role name="AbstractClass" element="abstractfactory.headfirst.pizzaaf.PizzaStore" />
			<role name="TemplateMethod()" element="abstractfactory.headfirst.pizzaaf.PizzaStore::orderPizza(java.lang.String):abstractfactory.headfirst.pizzaaf.Pizza" />
		</instance>
		<instance>
			<role name="AbstractClass" element="chainofresp.cor2.AbstractFilter" />
			<role name="TemplateMethod()" element="chainofresp.cor2.AbstractFilter::handleRequest(chainofresp.cor2.Request):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="factorymethod.cselt.Creator" />
			<role name="TemplateMethod()" element="factorymethod.cselt.Creator::doSomething():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="factorymethod.earthlink.Application" />
			<role name="TemplateMethod()" element="factorymethod.earthlink.Application::NewDocument(java.lang.String):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="factorymethod.earthlink.Factory" />
			<role name="TemplateMethod()" element="factorymethod.earthlink.Factory::addFederalFraudvillain(int):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="factorymethod.eckel.polymorphicfactory.ShapeFactory" />
			<role name="TemplateMethod()" element="factorymethod.eckel.polymorphicfactory.ShapeFactory::createShape(java.lang.String):factorymethod.eckel.polymorphicfactory.Shape" />
		</instance>
		<instance>
			<role name="AbstractClass" element="factorymethod.headfirst.pizzafm.PizzaStore" />
			<role name="TemplateMethod()" element="factorymethod.headfirst.pizzafm.PizzaStore::orderPizza(java.lang.String):factorymethod.headfirst.pizzafm.Pizza" />
		</instance>
		<instance>
			<role name="AbstractClass" element="factorymethod.landini.Creator" />
			<role name="TemplateMethod()" element="factorymethod.landini.Creator::anOperation(java.lang.String):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="prototype.earthlink.FederalFraudvillian" />
			<role name="TemplateMethod()" element="prototype.earthlink.FederalFraudvillian::clone():java.lang.Object" />
		</instance>
		<instance>
			<role name="AbstractClass" element="prototype.earthlink.Image" />
			<role name="TemplateMethod()" element="prototype.earthlink.Image::findAndClone(prototype.earthlink.imageType):prototype.earthlink.Image" />
			<role name="TemplateMethod()" element="prototype.earthlink.Image::clone():java.lang.Object" />
		</instance>
		<instance>
			<role name="AbstractClass" element="prototype.proto1.TargetedAction" />
			<role name="TemplateMethod()" element="prototype.proto1.TargetedAction::perform(prototype.proto1.Creature):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="strategy.earthlink.TemplateMethod1" />
			<role name="TemplateMethod()" element="strategy.earthlink.TemplateMethod1::solve():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="strategy.earthlink.TemplateMethod2" />
			<role name="TemplateMethod()" element="strategy.earthlink.TemplateMethod2::solve():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="templatemethod.cooper.Triangle" />
			<role name="TemplateMethod()" element="templatemethod.cooper.Triangle::draw(java.awt.Graphics):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="templatemethod.earthlink.Generalization" />
			<role name="TemplateMethod()" element="templatemethod.earthlink.Generalization::findSolution():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="templatemethod.earthlink.Specialization" />
			<role name="TemplateMethod()" element="templatemethod.earthlink.Specialization::stepThr():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="templatemethod.fluffycat.TitleInfo" />
			<role name="TemplateMethod()" element="templatemethod.fluffycat.TitleInfo::ProcessTitleInfo():java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="templatemethod.kuchana.CreditCard" />
			<role name="TemplateMethod()" element="templatemethod.kuchana.CreditCard::isValid():boolean" />
		</instance>
		<instance>
			<role name="AbstractClass" element="templatemethod.sun.ProjectItem" />
			<role name="TemplateMethod()" element="templatemethod.sun.ProjectItem::getCostEstimate():double" />
		</instance>
		<instance>
			<role name="AbstractClass" element="templatemethod.tmpl1.Logger" />
			<role name="TemplateMethod()" element="templatemethod.tmpl1.Logger::log(int, java.lang.String):void" />
		</instance>
	</pattern>
</system>

