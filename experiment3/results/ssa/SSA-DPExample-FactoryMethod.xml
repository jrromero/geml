<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Factory Method">
		<instance>
			<role name="Creator" element="abstractfactory.apwebco.FinancialToolsFactory" />
			<role name="FactoryMethod()" element="abstractfactory.apwebco.FinancialToolsFactory::createTaxProcessor():abstractfactory.apwebco.TaxProcessor" />
			<role name="FactoryMethod()" element="abstractfactory.apwebco.FinancialToolsFactory::createShipFeeProcessor():abstractfactory.apwebco.ShipFeeProcessor" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.codeguru.csharp.IAVDevice" />
			<role name="FactoryMethod()" element="abstractfactory.codeguru.csharp.IAVDevice::getAudio():abstractfactory.codeguru.csharp.IAudio" />
			<role name="FactoryMethod()" element="abstractfactory.codeguru.csharp.IAVDevice::getVideo():abstractfactory.codeguru.csharp.IVideo" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.csharpcorner.Factory" />
			<role name="FactoryMethod()" element="abstractfactory.csharpcorner.Factory::getObject():abstractfactory.csharpcorner.Base" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.developer.com.AbstractFactory" />
			<role name="FactoryMethod()" element="abstractfactory.developer.com.AbstractFactory::createCPU():abstractfactory.developer.com.CPU" />
			<role name="FactoryMethod()" element="abstractfactory.developer.com.AbstractFactory::createMMU():abstractfactory.developer.com.MMU" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.earthlink.democpp.Factory" />
			<role name="FactoryMethod()" element="abstractfactory.earthlink.democpp.Factory::createBtn():abstractfactory.earthlink.democpp.Widget" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.earthlink.demojava.FactoryFmProto$Factory" />
			<role name="FactoryMethod()" element="abstractfactory.earthlink.demojava.FactoryFmProto$Factory::makeCompromise():abstractfactory.earthlink.demojava.FactoryFmProto$Expression" />
			<role name="FactoryMethod()" element="abstractfactory.earthlink.demojava.FactoryFmProto$Factory::makeGrade():abstractfactory.earthlink.demojava.FactoryFmProto$Expression" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.eckel.GameElementFactory" />
			<role name="FactoryMethod()" element="abstractfactory.eckel.GameElementFactory::makePlayer():abstractfactory.eckel.Player" />
			<role name="FactoryMethod()" element="abstractfactory.eckel.GameElementFactory::makeObstacle():abstractfactory.eckel.Obstacle" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.headfirst.ducks.AbstractDuckFactory" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.ducks.AbstractDuckFactory::createMallardDuck():abstractfactory.headfirst.ducks.Quackable" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.ducks.AbstractDuckFactory::createRedheadDuck():abstractfactory.headfirst.ducks.Quackable" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.ducks.AbstractDuckFactory::createDuckCall():abstractfactory.headfirst.ducks.Quackable" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.ducks.AbstractDuckFactory::createRubberDuck():abstractfactory.headfirst.ducks.Quackable" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.headfirst.pizzaaf.PizzaIngredientFactory" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.pizzaaf.PizzaIngredientFactory::createDough():abstractfactory.headfirst.pizzaaf.Dough" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.pizzaaf.PizzaIngredientFactory::createSauce():abstractfactory.headfirst.pizzaaf.Sauce" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.pizzaaf.PizzaIngredientFactory::createCheese():abstractfactory.headfirst.pizzaaf.Cheese" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.pizzaaf.PizzaIngredientFactory::createPepperoni():abstractfactory.headfirst.pizzaaf.Pepperoni" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.pizzaaf.PizzaIngredientFactory::createClam():abstractfactory.headfirst.pizzaaf.Clams" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.headfirst.pizzaaf.PizzaStore" />
			<role name="FactoryMethod()" element="abstractfactory.headfirst.pizzaaf.PizzaStore::createPizza(java.lang.String):abstractfactory.headfirst.pizzaaf.Pizza" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.inria.AbAbstractFactory" />
			<role name="FactoryMethod()" element="abstractfactory.inria.AbAbstractFactory::getA(java.lang.String):abstractfactory.inria.A" />
			<role name="FactoryMethod()" element="abstractfactory.inria.AbAbstractFactory::getB(int):abstractfactory.inria.B" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.java2s.AddressFactory" />
			<role name="FactoryMethod()" element="abstractfactory.java2s.AddressFactory::createAddress():abstractfactory.java2s.Address" />
			<role name="FactoryMethod()" element="abstractfactory.java2s.AddressFactory::createPhoneNumber():abstractfactory.java2s.PhoneNumber" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.javacamp.ConnectionFactory" />
			<role name="FactoryMethod()" element="abstractfactory.javacamp.ConnectionFactory::getLocalConnection():abstractfactory.javacamp.Local" />
			<role name="FactoryMethod()" element="abstractfactory.javacamp.ConnectionFactory::getRemoteConnection():abstractfactory.javacamp.Remote" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.javapractices.DAOFactory" />
			<role name="FactoryMethod()" element="abstractfactory.javapractices.DAOFactory::getUserDAO():abstractfactory.javapractices.UserDAO" />
			<role name="FactoryMethod()" element="abstractfactory.javapractices.DAOFactory::getDeviceDAO():abstractfactory.javapractices.DeviceDAO" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.kuchana.VehicleFactory" />
			<role name="FactoryMethod()" element="abstractfactory.kuchana.VehicleFactory::getCar():abstractfactory.kuchana.Car" />
			<role name="FactoryMethod()" element="abstractfactory.kuchana.VehicleFactory::getSUV():abstractfactory.kuchana.SUV" />
		</instance>
		<instance>
			<role name="Creator" element="abstractfactory.wikipedia.GUIFactory" />
			<role name="FactoryMethod()" element="abstractfactory.wikipedia.GUIFactory::createButton():abstractfactory.wikipedia.Button" />
		</instance>
		<instance>
			<role name="Creator" element="bridge.siddiqui.Abstraction" />
			<role name="FactoryMethod()" element="bridge.siddiqui.Abstraction::getImplementor():bridge.siddiqui.Implementor" />
		</instance>
		<instance>
			<role name="Creator" element="command.sun.LocationEditor" />
			<role name="FactoryMethod()" element="command.sun.LocationEditor::getNewLocation():command.sun.Location" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.cselt.Creator" />
			<role name="FactoryMethod()" element="factorymethod.cselt.Creator::createObject():factorymethod.cselt.AbstractObject" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.earthlink.Application" />
			<role name="FactoryMethod()" element="factorymethod.earthlink.Application::CreateDocument(java.lang.String):factorymethod.earthlink.Document" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.earthlink.Factory" />
			<role name="FactoryMethod()" element="factorymethod.earthlink.Factory::createPresident():factorymethod.earthlink.President" />
			<role name="FactoryMethod()" element="factorymethod.earthlink.Factory::createAttorneyGeneral():factorymethod.earthlink.AttorneyGeneral" />
			<role name="FactoryMethod()" element="factorymethod.earthlink.Factory::createMinorityPartyCongressPerson():factorymethod.earthlink.MinorityPartyCongressPerson" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.eckel.polymorphicfactory.ShapeFactory" />
			<role name="FactoryMethod()" element="factorymethod.eckel.polymorphicfactory.ShapeFactory::create():factorymethod.eckel.polymorphicfactory.Shape" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.gsraj.common.Profile" />
			<role name="FactoryMethod()" element="factorymethod.gsraj.common.Profile::getResource():factorymethod.gsraj.common.Resource" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.headfirst.pizzafm.PizzaStore" />
			<role name="FactoryMethod()" element="factorymethod.headfirst.pizzafm.PizzaStore::createPizza(java.lang.String):factorymethod.headfirst.pizzafm.Pizza" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.java2s.Editable" />
			<role name="FactoryMethod()" element="factorymethod.java2s.Editable::getEditor():factorymethod.java2s.ItemEditor" />
		</instance>
		<instance>
			<role name="Creator" element="factorymethod.landini.Creator" />
			<role name="FactoryMethod()" element="factorymethod.landini.Creator::createProduct(java.lang.String):factorymethod.landini.Product" />
		</instance>
		<instance>
			<role name="Creator" element="interpreter.lucacristina.expr.functions.FunctionFactory" />
			<role name="FactoryMethod()" element="interpreter.lucacristina.expr.functions.FunctionFactory::create(java.lang.String, interpreter.lucacristina.expr.Expression[]):interpreter.lucacristina.expr.Function" />
		</instance>
		<instance>
			<role name="Creator" element="iterator.iter1.Point3DCollection" />
			<role name="FactoryMethod()" element="iterator.iter1.Point3DCollection::iterator():iterator.iter1.Point3DIterator" />
		</instance>
		<instance>
			<role name="Creator" element="iterator.iter2.Collection" />
			<role name="FactoryMethod()" element="iterator.iter2.Collection::iterator():iterator.iter2.Iterator" />
		</instance>
		<instance>
			<role name="Creator" element="prototype.earthlink.FactoryProto$Xyz" />
			<role name="FactoryMethod()" element="prototype.earthlink.FactoryProto$Xyz::cloan():prototype.earthlink.FactoryProto$Xyz" />
		</instance>
		<instance>
			<role name="Creator" element="prototype.earthlink.Image" />
			<role name="FactoryMethod()" element="prototype.earthlink.Image::clone():prototype.earthlink.Image" />
		</instance>
	</pattern>
</system>